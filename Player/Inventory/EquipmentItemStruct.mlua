@Struct
script EquipmentItemStruct extends ItemStruct

	property integer type = 0

	property integer level = 1

	property table skillZ = {}

	property table skillX = {}

	property table skillC = {}

	property boolean isEquiped = false

	method boolean Use(EntityRef entity)
		
		
		
		
		
		
		
		
		local playerEquipment = entity.PlayerEquipmentComponent
		if playerEquipment == nil then
			return
		end
		
		local equipmentInfo = _GlobalData:GetEquipmentItem(self.itemId)
		if equipmentInfo == nil then
				return
		end
		
		if playerEquipment:IsEquiped(self) == true then
			
			playerEquipment:SyncUnEquipItem(equipmentInfo.partType,false)
			return false
		end
		
		
		playerEquipment:SyncUnEquipItem(equipmentInfo.partType,true)
		
		playerEquipment:SyncEquipItem(self)
		
		log(_GlobalData:GetItem(tostring(self.itemId)).name.."를 장착합니다.")
		return true
	end

	method void TryRandomSkill(integer itemIndex)
		local equipmentInfo = _GlobalData:GetEquipmentItem(itemIndex)
		if equipmentInfo == nil then	
			return
		end
		
		local skill_Id_Table = _GlobalData:GetSkillTypeTable(equipmentInfo.weaponType)
		
		local rating = math.random(equipmentInfo.rating)
		local skillCount = #skill_Id_Table[rating]
		self.skillZ["id"] = skill_Id_Table[rating][math.random(skillCount)]
		
		
		
		
		rating = math.random(equipmentInfo.rating)
		skillCount = #skill_Id_Table[rating]
		self.skillX["id"] = skill_Id_Table[rating][math.random(skillCount)]
		
		
		self.type = math.random(7)
	end

	method boolean IsIncludeAbility()
		return true
	end

	method boolean IsWeapon()
		return true
	end

end