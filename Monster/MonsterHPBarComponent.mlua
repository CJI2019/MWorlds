@Component
script MonsterHPBarComponent extends Component

	property number beginValue = 0

	property EntityRef hpBar = nil

	property EntityRef frameEntity = nil

	property EntityRef hitBar = nil

	@ExecSpace("Client")
	method void SyncHP(number value)
		value = math.clamp(value,0,1)
		
		self.hpBar.UITransformComponent.RectSize.x = self.beginValue * value
		self.hitBar.UITransformComponent.RectSize.x = self.beginValue - self.hpBar.UITransformComponent.RectSize.x
		
		self.hitBar.SpriteGUIRendererComponent.Color.a = 1.0
		if self._T.hitBarUpdateTimer == nil then
			self._T.hitBarUpdateTimer = _TimerService:SetTimerRepeat(self.HitBarUpdate,0.1)
		end
		
		if self.frameEntity.Enable == false then
			self.frameEntity.Enable = true	
		end 
	end

	@ExecSpace("ClientOnly")
	method void OnBeginPlay()
		local animationClip = _ResourceService:LoadAnimationClipAndWait(self.Entity.SpriteRendererComponent.SpriteRUID)
		
		
		local firstFrameSprite = animationClip.Frames[1].FrameSprite
		
		
		local spriteHeightInPixels = firstFrameSprite.Height
		local pixelPerUnit = firstFrameSprite.PixelPerUnit
		local spritePivotNormalized = firstFrameSprite.Pivot 
		
		
		local entityScale = self.Entity.TransformComponent.Scale
		
		
		local actualSpriteHeightInWorldUnits = (spriteHeightInPixels / pixelPerUnit) * entityScale.y
		
		
		
		local localOffsetY = (1.1 - spritePivotNormalized.y) * actualSpriteHeightInWorldUnits 
		
		
		local correctLocalPos = Vector3(0, localOffsetY, 0)
		
		self.frameEntity = _SpawnService:SpawnByModelId("model://a20cc05b-6c79-4c03-8129-0fc27db29125","hp_bar",correctLocalPos,self.Entity)
		self.hpBar = _EntityService:GetEntityByPath(self.frameEntity.Path.."/HP_bar")
		self.beginValue = self.hpBar.UITransformComponent.RectSize.x
		
		self.hitBar = _EntityService:GetEntityByPath(self.frameEntity.Path.."/hit_bar")
		self.frameEntity.Enable = false
	end

	@ExecSpace("Client")
	method void Init()
		self.frameEntity.Enable = false
		self.hpBar.UITransformComponent.RectSize.x = self.beginValue
		self.hitBar.UITransformComponent.RectSize.x = 0
	end

	method void HitBarUpdate()
		self.hitBar.SpriteGUIRendererComponent.Color.a -= 0.05
		
		if self.hitBar.SpriteGUIRendererComponent.Color.a < 0.0 then
		    local id = self._T.hitBarUpdateTimer
		    self._T.hitBarUpdateTimer = nil
		    _TimerService:ClearTimer(id)
		end
	end

	@ExecSpace("ClientOnly")
	method void OnDestroy()
		if self._T.hitBarUpdateTimer ~= nil then
		    _TimerService:ClearTimer(self._T.hitBarUpdateTimer)
		end
	end

end