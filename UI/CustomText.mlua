@Logic
script CustomText extends Logic

	property table charWidthDict = {}

	property table textHeight = {}

	@ExecSpace("ClientOnly")
	method void OnBeginPlay()
		
	end

	method number GetFontSizeWidth(integer fontSize, string char)
		return self.charWidthDict[fontSize][char]
	end

	method void FontWidthCache(integer fontSize)
		self.charWidthDict[fontSize] = {}
		
		local txt = _SpawnService:SpawnByModelId('model://uitext', 'txt', Vector3.zero,_EntityService:GetEntityByPath('/ui/DefaultGroup'))
		
		
		local txtcomp = txt.TextComponent
		txtcomp.FontSize = fontSize
		local height = txtcomp:GetPreferredHeight(" ", 50)
		self.textHeight[fontSize] = height
		
		for i = 0x20, 0xBF do 
		    local width = txtcomp:GetPreferredWidth(utf8.char(i))
		    self.charWidthDict[fontSize][utf8.char(i)] = width
		    
		end
		self.charWidthDict[fontSize][utf8.char(0x0A)] = 0 
		local hangul_width = txtcomp:GetPreferredWidth('ê°€')
		
		
		
		
		
		
		txt:Destroy()
		
		local start_codepoint = 0xAC00 
		local end_codepoint = 0xD7A3   
		
		for code = start_codepoint, end_codepoint do
		    local char = utf8.char(code)
			self.charWidthDict[fontSize][char] = hangul_width
		end
		
		self:SetCharWidthInRange(fontSize,0x1100,0x110F,hangul_width)
		
		self:SetCharWidthInRange(fontSize,0x1161,0x116F,hangul_width)
		
		self:SetCharWidthInRange(fontSize,0x11A8,0x11C2,hangul_width)
		
		
		
		
		self:SetCharWidthInRange(fontSize,12593,12622,hangul_width)
		
		
		self:SetCharWidthInRange(fontSize,12623,12643,hangul_width)
		
		log("FontWidthCache Finish")
	end

	method void SetCharWidthInRange(integer fontSize, integer start, integer ended, number size)
		local start_codepoint = start
		
		local end_codepoint = ended
		
		
		for code = start_codepoint, end_codepoint do
		    local char = utf8.char(code)
			self.charWidthDict[fontSize][char] = size
		    
		    
		end
	end

	method number GetFontHeight(integer fontSize)
		return self.textHeight[fontSize]
	end

	method integer SetImageText(table utf8_TextTable, EntityRef imageEntity, integer idx)
		idx += 1 
		local storedRuid = ""
		while true
		do
			idx += 1
			if utf8_TextTable[idx] == '>' then
				break
			end
			storedRuid = storedRuid..utf8_TextTable[idx]
		end
		imageEntity:GetChildByName("img").SpriteGUIRendererComponent.ImageRUID = storedRuid
		return idx
	end

	method integer SetColorText(table utf8_TextTable, EntityRef entity, integer idx)
		idx += 1 
		local str = ""
		while true
		do
			idx += 1
			if utf8_TextTable[idx] == '>' then
				break
			end
			str = str..utf8_TextTable[idx]
		end
		
		local color = _UtilLogic:Split(str,",")
		entity.TextComponent.FontColor.r = tonumber(color[1])
		entity.TextComponent.FontColor.g = tonumber(color[2])
		entity.TextComponent.FontColor.b = tonumber(color[3])
		if color[4] ~= nil then
			entity.TextComponent.FontColor.a = tonumber(color[4])
		end
		
		return idx
	end

end